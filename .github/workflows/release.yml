name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Build for production
      run: npm run build:release

    - name: Get version from manifest
      id: version
      run: echo "version=$(node -p "require('./manifest.json').version")" >> $GITHUB_OUTPUT

    - name: Verify build artifacts
      run: |
        ls -la dist/
        echo "Build size: $(du -sh dist/ | cut -f1)"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Decks v${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
        body: |
          ## Decks v${{ steps.version.outputs.version }}

          ### Installation
          1. Download the release files below
          2. Extract to your Obsidian plugins folder: `.obsidian/plugins/decks/`
          3. Enable the plugin in Obsidian settings

          ### Files
          - `main.js` - Plugin code
          - `manifest.json` - Plugin manifest
          - `styles.css` - Plugin styles

          ### What's Changed
          See the commit history for detailed changes in this release.

    - name: Upload main.js
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/main.js
        asset_name: main.js
        asset_content_type: application/javascript

    - name: Upload manifest.json
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/manifest.json
        asset_name: manifest.json
        asset_content_type: application/json

    - name: Upload styles.css
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/styles.css
        asset_name: styles.css
        asset_content_type: text/css
